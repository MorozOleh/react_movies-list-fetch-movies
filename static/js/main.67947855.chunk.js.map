{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","BASE__URL","request","a","fetch","response","json","FindMovie","onAdd","useState","setTitle","error","setError","newMovie","setMovie","disabledButton","setDisabledButton","handleChangeTitle","useCallback","e","target","value","handleFindMovie","Title","collectedMovieProperties","imdbID","Poster","Plot","imbdUrl","handleSubmit","event","preventDefault","some","property","includes","onSubmit","htmlFor","type","id","onChange","placeholder","classNames","onClick","disabled","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67947855.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string,\n  imdbUrl: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  imgUrl: '',\n  imdbUrl: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const key = 'dae19b6e';\n\nconst BASE__URL = `https://www.omdbapi.com/?apikey=${key}&`;\n\nexport const request = async(title) => {\n  const response = await fetch(`${BASE__URL}t=${title}`);\n\n  return response.json();\n};\n","import React, { useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nimport './FindMovie.scss';\n\nexport const FindMovie = ({ onAdd, movies }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(true);\n  const [newMovie, setMovie] = useState('');\n  const [disabledButton, setDisabledButton] = useState(true);\n\n  const handleChangeTitle = useCallback((e) => {\n    setTitle(e.target.value);\n    setError(false);\n  }, []);\n\n  const handleFindMovie = useCallback(async() => {\n    const movie = await request(title);\n\n    if (movie.Title) {\n      const collectedMovieProperties = {\n        title: movie.Title,\n        imdbId: movie.imdbID,\n        imgUrl: movie.Poster,\n        description: movie.Plot,\n        imbdUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      };\n\n      setTitle('');\n      setMovie(collectedMovieProperties);\n      setDisabledButton(false);\n    } else {\n      setError(true);\n    }\n  });\n\n  const handleSubmit = useCallback((event) => {\n    event.preventDefault();\n    setDisabledButton(true);\n    setMovie('');\n\n    const checkMovie = movies.some(\n      property => property.imdbId.includes(\n        newMovie.imdbId,\n      ),\n    );\n\n    if (checkMovie) {\n      return;\n    }\n\n    onAdd(newMovie);\n  });\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={handleChangeTitle}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n            />\n          </div>\n\n          <p className={classNames(\n            'help', 'is-danger', { 'is-hidden': !error },\n          )}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={handleFindMovie}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              disabled={disabledButton}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && (<MovieCard {...newMovie} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      imgUrl: PropTypes.string,\n      imdbUrl: PropTypes.string,\n      imdbId: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nFindMovie.defaultProps = {\n  movies: [],\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport data from './api/movies.json';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = (movie) => {\n    setMovie([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}